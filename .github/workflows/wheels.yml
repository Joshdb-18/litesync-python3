name: Build

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install build dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3 libsqlite3-dev
          wget https://litesync.io/download/litesync-free-linux-x86_64.tar.gz
          tar -xzvf litesync-free-linux-x86_64.tar.gz
          ./install.sh
          cd ..

      - name: Install build dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install sqlite -y
          wget https://litesync.io/download/litesync-free-windows-x86_64.tar.gz
          tar -xzvf litesync-free-windows-x86_64.tar.gz
          ./install.sh
          cd ..

      - name: Install build dependencies
        if: matrix.os == 'macos-latest'
        run: |
          # Install sqlite3 via brew
          brew update
          brew install sqlite
          wget https://litesync.io/download/litesync-free-mac-x86_64.tar.gz
          tar -xzvf litesync-free-mac-x86_64.tar.gz
          ./install.sh
          cd ..

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        with:
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
